x0=scale(x)#*(sqrt(n)/sqrt(n-1))
svd_o <- fast.svd(x0)
comp  <- svd_o$u[,1:modos,drop=F]%*%diag(svd_o$d[1:modos],length(svd_o$d[1:modos]),length(svd_o$d[1:modos]))
vect  <- svd_o$v[,1:modos]
output <- list(comp,vect)
return(output)
}
selection_area=function(x,y,ponde){
mode_y=10 ; if(dim(y)[2]<10)mode_y=dim(y)[2]
mode_x=10
y_pca=pca_y_svd(y,modos=mode_y)[[1]]
x_pca=pca_x_svd(x,modos=mode_x,ponde)[[1]]
all_cor=matrix(NA,mode_x*mode_y,dim(x)[2])
count=0
for(i in 1:mode_x){
for(j in 1:mode_y){
canonico=cancor(x_pca[,1:i],y_pca[,1:j,drop=F])
x_center=scale(x_pca[,1:i],scale = F)
y_center=scale(y_pca[,1:j],scale = F)
com_x=x_center%*%canonico$xcoef
com_y=y_center%*%canonico$ycoef
mode1=cbind(com_x[,1],com_y[,1])
cor_tsm=cor(x,mode1[,1])
count=count+1
all_cor[count,]=cor_tsm[,1]
}
}
print("Finalizo la selección del area para un mes")
cor_mean=apply(abs(all_cor),2,mean)
return(cor_mean)
}
ponde=lapply(lat,function(x)lapply(x,function(x) sqrt(cos((pi/180)*x))))
cat("\n Ponderación PCA \n")
cor_tsm=Map(function(x,y,z) Map(selection_area,x,y,z),data_tsm_final,data_res_final,ponde)
plot(data_x_crop[[1]][[1]][[1]])
hist(values(data_x_crop[[1]][[1]][[1]]))
plot(data_x_crop[[1]][[1]][[1]]>300)
values(data_x_crop[[1]][[1]][[1]])
main_dir="C:/Users/dagudelo/Desktop"
dir.create(paste0(main_dir,"/run_CPT"))
o_empty_3=lapply(paste0(main_dir,"/run_CPT","/",list.files(path_dpto)),dir.create)
path_months=unlist(lapply(paste0(main_dir,"/run_CPT","/",list.files(path_dpto)),function(x)paste0(x,"/",month.abb[season])))
o_empty_4=lapply(path_months,dir.create)
o_empty_5=lapply(paste0(path_months,"/output"),dir.create)
names_all=lapply(list.files(path_dpto),function(x) paste0(x,"/",month.abb[season]))
files_x=function(raster,cor,na,years){
year_p=paste0("cpt:T=",years)
for(i in seq(0,0.9,0.1)){
pos_data=which(!is.na(values(raster)[,1]))
pos_selec=cor<=quantile(cor,i)
pos_final=pos_data*pos_selec
val=values(raster)
val[pos_final,]=NA
val[which(is.na(val),arr.ind = T)]=0
val_l=split(val,col(val))
val_matrix=lapply(val_l,function(x)matrix(x,length(90:-90),length(0:359),byrow=TRUE,dimnames=list(c(90:-90),c(0:359))))
p="xmlns:cpt=http://iri.columbia.edu/CPT/v10/"
p1="cpt:nfields=1"
p2=paste0("cpt:field=ssta, ",year_p[1],", cpt:nrow=",181,", cpt:ncol=",360,", cpt:row=Y, cpt:col=X, cpt:units=Kelvin_scale, cpt:missing=0")
name_file=paste0(main_dir,"/run_CPT/",na,"/","x_",i,".txt")
sink(name_file)
cat(p)
cat("\n")
cat(p1)
cat("\n")
cat(p2)
cat("\n")
u=Map(function(x,y){write.table(t(c(" ",0:359)),sep="\t",col.names=F,row.names=F,quote = F);write.table(x,sep="\t",col.names=F,row.names=T,quote = F);cat(y);cat("\n")},val_matrix,c(year_p[-1],""))
sink()
}
return("Successful process")
}
main_dir="C:/Users/dagudelo/Desktop"
dir.create(paste0(main_dir,"/run_CPT"))
list.files(main_dir)
path_dpto
list.files(path_dpto))
list.files(path_dpto)
o_empty_6=Map(function(x,y,z,r)Map(files_x,x,y,z,r),data_x,cor_tsm,names_all,time_sel)
part_id=Map(files_y,data_y,list.files(path_dpto))
cat("\n Archivos de las estaciones construidos para CPT \n")
files_y=function(y_d,names){
y_m=paste(y_d[,1],y_d[,2],sep="-")
p="xmlns:cpt=http://iri.columbia.edu/CPT/v10/"
data=y_d[,-1:-2]
row.names(data)=y_m
p1=paste0("cpt:field=prcp, cpt:nrow=",dim(data)[1],", cpt:ncol=",dim(data)[2],", cpt:row=T, cpt:col=index, cpt:units=mm, cpt:missing=-999.000000000")
name_file=paste0(main_dir,"/run_CPT/",names,"/","y_",names,".txt")
sink(name_file)
cat(p)
cat("\n")
cat(p1)
cat("\n")
write.table(t(c(" ",substr(names(data),10,25))),sep="\t",col.names=F,row.names=F,quote = F)
write.table(data,sep="\t",col.names=F,row.names=T,quote = F)
sink()
return(substr(names(data),2,9))
}
run_cpt=function(x,y,GI,pear,afc,prob,cc,path_run,m_x,m_y,m_cca,t){
cmd <- "@echo off
(
echo 611
echo 545
echo 1
echo %path_x%
echo 90
echo -90
echo 0
echo 359
echo 1
echo %mode_x%
echo 2
echo %path_y%
echo 1
echo %mode_y%
echo 1
echo %mode_cca%
echo 9
echo 1
echo 554
echo 2
echo %transfor%
echo 112
echo %path_GI%
echo 311
echo 451
echo 455
echo 413
echo 1
echo %path_pear%
echo 413
echo 3
echo %path_2afc%
echo 111
echo 501
echo %path_prob%
echo 401
echo %path_cc%
echo 0
echo 0
) | CPT_batch.exe"
cmd<-gsub("%path_x%",x,cmd)
cmd<-gsub("%path_y%",y,cmd)
cmd<-gsub("%path_GI%",GI,cmd)
cmd<-gsub("%path_pear%",pear,cmd)
cmd<-gsub("%path_2afc%",afc,cmd)
cmd<-gsub("%path_prob%",prob,cmd)
cmd<-gsub("%path_cc%",cc,cmd)
cmd<-gsub("%mode_x%",m_x,cmd)
cmd<-gsub("%mode_y%",m_y,cmd)
cmd<-gsub("%mode_cca%",m_cca,cmd)
cmd<-gsub("%transfor%",t,cmd)
write(cmd,path_run)
system(path_run, ignore.stdout = T, show.output.on.console = T)
}
run_all=function(name,set,n){
modes_x=set[1]
modes_y=set[2];if(n<as.numeric(as.character(set[2])))modes_y=n
modes_cca=set[3];if(min(as.numeric(as.character(set[1:2])))<as.numeric(as.character(modes_cca)))modes_cca=min(as.numeric(as.character(set[1:2])))
if(set[4]=="si"){tran=541}else(tran=" ")
dpto=substr(name,1,nchar(name)-4)
dir=paste0(main_dir,"/","run_CPT/")
for(i in seq(0,0.9,0.1)){
x_dir=paste0(dir,name,"/x_",i,".txt")
y_dir=paste0(dir,dpto,"/y_",dpto,".txt")
GI_dir=paste0(dir,name,"/output/","GI_",i,".txt")
pear_dir=paste0(dir,name,"/output/","pear_",i,".txt")
afc_dir=paste0(dir,name,"/output/","2afc_",i,".txt")
prob_dir=paste0(dir,name,"/output/","prob_",i,".txt")
cc_dir=paste0(dir,name,"/output/","cc_",i,".txt")
run_dir=paste0(dir,name,"/run_",i,".bat")
CPT=run_cpt(x_dir,y_dir,GI_dir,pear_dir,afc_dir,prob_dir,cc_dir,run_dir,modes_x,modes_y,modes_cca,tran)
}
return(print("finalizo un mes"))
}
metricas=function(x,y){
p=read.table(paste0(x,"/output","/pear_",y,".txt"),header=T,dec=".",skip=2,col.names = c("id","pearson"))
k=read.table(paste0(x,"/output","/2afc_",y,".txt"),header=T,dec=".",skip=2,col.names = c("id","kendall"))
g=read.table(paste0(x,"/output","/GI_",y,".txt"),header=T,dec=".",skip=5)
goodness=g[dim(g)[1],dim(g)[2]]
c=read.table(paste0(x,"/output","/cc_",y,".txt"),header=T,dec=".",skip=2)
canonica=c[1,1]
p_k=merge(p,k)
data=cbind(month=which(month.abb==basename(x)),p_k,goodness,canonica)
return(data)
}
proba=function(x,y){
below=read.table(paste0(x,"/output","/prob_",y,".txt"),header=T,nrow=1,dec=".",fill=T,skip=3,check.names = FALSE)
normal=read.table(paste0(x,"/output","/prob_",y,".txt"),header=T,nrow=1,dec=".",fill=T,skip=6,check.names = FALSE)
above=read.table(paste0(x,"/output","/prob_",y,".txt"),header=T,nrow=1,dec=".",fill=T,skip=9,check.names = FALSE)
data=cbind.data.frame(month=which(month.abb==basename(x)),id=names(below),below=as.matrix(below)[1,],normal=as.matrix(normal)[1,],above=as.matrix(above)[1,])
return(data)
}
best_GI=function(x){
names=substr(basename(x),4,nchar(basename(x))-4)
all_GI=lapply(x,function(x)read.table(x,header=T,dec=".",skip=5))
best=lapply(all_GI,function(x) x[dim(x)[1],dim(x)[2]] )
pos=which(unlist(best)==max(unlist(best)))[1]
return(names[pos])
}
save_areas=function(ras,cor,dec,name,ext){
cor_raster=ras[[1]]
pos=!is.na(values(cor_raster))
values(cor_raster)[pos]=cor
selec_raster=cor_raster>=quantile(cor,as.numeric(dec))
raster_final=crop(selec_raster,extent(ext))
writeRaster(raster_final,name,format="ascii")
return(print("Área seleccionada guardada en formato Raster"))
}
part_id=Map(files_y,data_y,list.files(path_dpto))
path_confi=list.files(path_dpto,recursive = T,pattern = "cpt",full.names = T)
data_confi=lapply(path_confi,function(x)read.table(x,header=T,sep=",",dec=".",row.names = 1))
confi_selec=lapply(data_confi,function(x)x[,season])
confi_l=lapply(confi_selec,function(x) as.list(x))
n_data=lapply(data_res_final,function(x)lapply(x,function(x)dim(x)[2]))
O_empty_8=Map(function(x,y,z)Map(run_all,x,y,z),names_all,confi_l,n_data)
cat("\n Batch CPT realizado \n")
data_confi
path_save
path_resul=path_save
o_metricas=Map(function(x,y)Map(metricas,x,y),path_out_run,best_decil)
years=format(seq(Sys.Date(), by = "month", length = 6) ,"%Y")
metricas_l=lapply(o_metricas,function(x)Map(function(x,y)cbind(year=y,x),x,years))
metricas_all=Map(function(x,y)lapply(x,function(x,y){x$id=paste0(y,x$id);x},y),metricas_l,part_id)
metricas_final=do.call("rbind",lapply(metricas_all,function(x)do.call("rbind",x)))
path_out_run=lapply(paste0(main_dir,"/run_CPT","/",list.files(path_dpto)),function(x)paste0(x,"/",month.abb[season]))
o_e=lapply(path_out_run,function(x)lapply(x,function(x)list.files(x,full.names = T,recursive = T,pattern = "GI")))
best_decil_l=lapply(o_e,function(x)lapply(x,best_GI))
best_decil=lapply(best_decil_l,unlist)
path <- "D:/OneDrive - CGIAR/CIAT/consul/data/Performance_precipitation"
path
all_names <- list.files(path,full.names = T)
all_names
index <- lapply(strsplit(basename(all_names),"_"),`[[`, 1)
index
file <- lapply(all_names,function(x) lapply(1:10,function(y)read.xlsx(x, sheet= y,cols = 1:9)))
if(require(ggplot2)==FALSE){install.packages("ggplot2")}
library("ggplot2")
if(require(readxl)==FALSE){install.packages("readxl")}
library("readxl")
if(require(dplyr)==FALSE){install.packages("dplyr")}
library("dplyr")
if(require(tidyr)==FALSE){install.packages("tidyr")}
library("tidyr")
if(require(openxlsx)==FALSE){install.packages("openxlsx")}
library("openxlsx")
if(require(forcats)==FALSE){install.packages("forcats")}
library(forcats)
if(require(RColorBrewer)==FALSE){install.packages("RColorBrewer")}
library(RColorBrewer)
shets <- lapply(all_names,excel_sheets)
shets
data_ggplot <- function(x,ind,sh){
cols <- lapply(x,"[")
table <- Map(function(x,y,z,r,q)cbind.data.frame(metric=r,index=q,model=z,area=y,x),cols[-1],names(cols)[-1],cols[1],ind,sh)
table_final <- do.call(rbind,table)
return(table_final)
}
data_index <- Map(function(x,y,z)Map(data_ggplot,x,y,z),file,index,shets)
shets
data_ggplot <- function(x,ind,sh){
cols <- lapply(x,"[")
table <- Map(function(x,y,z,r,q)cbind.data.frame(metric=r,index=q,model=z,area=y,x),cols[-1],names(cols)[-1],cols[1],ind,sh)
table_final <- do.call(rbind,table)
return(table_final)
}
file
file <- lapply(all_names,function(x) lapply(1:10,function(y)read.xlsx(x, sheet= y,cols = 1:9)))
file
index
shets
data_index <- Map(function(x,y,z)Map(data_ggplot,x,y,z),file,index,shets)
data_all <- lapply(data_index,function(x)do.call(rbind,x))  %>%  do.call(rbind,.)
pval_file <- lapply(1:10,function(y)read.xlsx(all_names[3], sheet= y,cols = 11:19))
data_pvalue_l <-Map(data_ggplot,pval_file,c("r"),shets[[3]])
data_pvalue <-do.call(rbind,data_pvalue_l)
data_final=merge(data_all,data_pvalue,by=c( "metric", "index",  "model",  "area"),all=TRUE)
names(data_final)[5:6]=c("x","p_value")
View(data_final)
data <- data_final
data_plot=data[data$metric=="MBE",]
data_plot
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(300,200,100, 70, 50, 30,10, 0,-10,-30,-50,-70,-100)))
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[11:8],pallet[7],"lightcyan1","white","white",pallet[4:1])
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p <- p +  facet_grid(~ index,switch = "y",scales="free_y",labeller = as_labeller(c(`prcptot`="PRCPTOT",`rx1day`="RX1day",`rx5day`="RX5day",`r95p`="R95P",`r99p`="R99P",`sdii`="SDII",`r10mm`="R10mm",`r20mm`="R20mm",`cwd`="CWD",`cdd`="CDD")) )
#p <- p + theme(panel.spacing.x = unit(0, "lines"),legend.text = element_text(size = 6),legend.key.width = unit(0.5,"line"),legend.key.height=unit(1,"line"),axis.text.x = element_text(size = 7),strip.text.x=element_text(size = 6),strip.background = element_blank(), panel.border = element_rect(colour = "gray", fill=NA, size=1))
p <- p + theme(panel.spacing.x = unit(0, "lines"),legend.text = element_text(size = 6),legend.key.width = unit(0.5,"line"),legend.key.height=unit(1,"line"),axis.ticks.x=element_blank(),axis.text.x = element_blank(),strip.text.x=element_text(size = 6),strip.background = element_blank(), panel.border = element_rect(colour = "gray", fill=NA, size=1))
x11(6,6);p
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p
p <- ggplot(data = data_plot, mapping = aes(x = model,y =model , fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p
data_plot
data_final$index
table(data$index)
data_plot=data[data$metric=="MBE"|data$index=="prcptot",]
View(data_plot)
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p
p
windows()
p
data_plot=data[data$metric=="MBE"|data$index=="prcptot",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(300,200,100, 70, 50, 30,10, 0,-10,-30,-50,-70,-100)))
#data_plot$x=fct_rev(cut(data_plot$x, c(300,200,-100),labels=c("(300,200)","(200,-100)")))
#lv=levels(data_plot$index)
#levels(data_plot$index)=c(lv[3:10],lv[2],lv[1])
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[11:8],pallet[7],"lightcyan1","white","white",pallet[4:1])
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
windows()
p
data_plot
data_plot=data[data$metric=="MBE"|data$index=="prcptot",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(300,200,100, 70, 50, 30,10, 0,-10,-30,-50,-70,-100)))
#data_plot$x=fct_rev(cut(data_plot$x, c(300,200,-100),labels=c("(300,200)","(200,-100)")))
#lv=levels(data_plot$index)
#levels(data_plot$index)=c(lv[3:10],lv[2],lv[1])
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[11:8],pallet[7],"lightcyan1","white","white",pallet[4:1])
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
windows()
p
table(data_index)
table(data$index)
data_plot=data[data$metric=="MBE"|data$index=="r95p",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(300,200,100, 70, 50, 30,10, 0,-10,-30,-50,-70,-100)))
#data_plot$x=fct_rev(cut(data_plot$x, c(300,200,-100),labels=c("(300,200)","(200,-100)")))
#lv=levels(data_plot$index)
#levels(data_plot$index)=c(lv[3:10],lv[2],lv[1])
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[11:8],pallet[7],"lightcyan1","white","white",pallet[4:1])
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
windows()
p
data_plot=data[data$metric=="MBE",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(300,200,100, 70, 50, 30,10, 0,-10,-30,-50,-70,-100)))
#data_plot$x=fct_rev(cut(data_plot$x, c(300,200,-100),labels=c("(300,200)","(200,-100)")))
#lv=levels(data_plot$index)
#levels(data_plot$index)=c(lv[3:10],lv[2],lv[1])
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[11:8],pallet[7],"lightcyan1","white","white",pallet[4:1])
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
windows()
p
data_plot
data_plot=data[data$metric=="MBE",]
data_plot$model=factor(substring(data_plot$model,2),levels=1:27)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(300,200,100, 70, 50, 30,10, 0,-10,-30,-50,-70,-100)))
#data_plot$x=fct_rev(cut(data_plot$x, c(300,200,-100),labels=c("(300,200)","(200,-100)")))
#lv=levels(data_plot$index)
#levels(data_plot$index)=c(lv[3:10],lv[2],lv[1])
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[11:8],pallet[7],"lightcyan1","white","white",pallet[4:1])
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
windows()
p
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
#p <- p + theme(panel.spacing.x = unit(0, "lines"),legend.text = element_text(size = 6),legend.key.width = unit(0.5,"line"),legend.key.height=unit(1,"line"),axis.text.x = element_text(size = 7),strip.text.x=element_text(size = 6),strip.background = element_blank(), panel.border = element_rect(colour = "gray", fill=NA, size=1))
p <- p + theme(panel.spacing.x = unit(0, "lines"),legend.text = element_text(size = 6),legend.key.width = unit(0.5,"line"),legend.key.height=unit(1,"line"),axis.ticks.x=element_blank(),axis.text.x = element_blank(),strip.text.x=element_text(size = 6),strip.background = element_blank(), panel.border = element_rect(colour = "gray", fill=NA, size=1))
windows()
p
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p + theme(legend.position="bottom")
windows()
p
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p + theme(legend.position="bottom")
windows()
p
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="MBE")
p <- p +  theme(legend.position="bottom")
windows()
p
View(data_plot)
data_plot=data[data$metric=="RSR",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(0,2,4,6,8,13)))
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[1:4],"white")
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="RSR")
p
data_plot
data_plot=data[data$metric=="RSR",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(0,2,4,6,8,13)))
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
col <- c(pallet[1:4],"white")
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p + scale_fill_manual(values=col)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="RSR")
p <- p +  facet_grid(~ index,switch = "y",scales="free_y",labeller = as_labeller(c(`prcptot`="PRCPTOT",`rx1day`="RX1day",`rx5day`="RX5day",`r95p`="R95P",`r99p`="R99P",`sdii`="SDII",`r10mm`="R10mm",`r20mm`="R20mm",`cwd`="CWD",`cdd`="CDD")) )
p <- p + theme(panel.spacing.x = unit(0, "lines"),legend.text = element_text(size = 6),legend.key.width = unit(0.5,"line"),legend.key.height=unit(1,"line"),axis.text.x = element_text(size = 7),strip.text.x=element_text(size = 6),strip.background = element_blank(), panel.border = element_rect(colour = "gray40", fill=NA, size=1))
x11(6,6);p
data_plot=data[data$metric=="r",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(-1,-0.8,-0.6,-0.4,-0.2,-0.1,0.1,0.2,0.4,0.6,0.8,1)))
data_plot$sig=cut(data_plot$p_value, c(-Inf,0.05,Inf),labels= c("*",""))
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p +  scale_fill_manual(values=pallet)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="R")
p <- p +  facet_grid(~ index,switch = "y",scales="free_y",labeller = as_labeller(c(`prcptot`="PRCPTOT",`rx1day`="RX1day",`rx5day`="RX5day",`r95p`="R95P",`r99p`="R99P",`sdii`="SDII",`r10mm`="R10mm",`r20mm`="R20mm",`cwd`="CWD",`cdd`="CDD")) )
p <- p +  geom_text(aes(label=data_plot$sig),size=3,na.rm=TRUE,vjust = 0,hjust=0.5)## vjust y hjust eliminar para  centrar texto
p <- p +  theme(panel.spacing.x = unit(0, "lines"),legend.text = element_text(size = 6),legend.key.width = unit(0.5,"line"),legend.key.height=unit(1,"line"),axis.text.x = element_text(size = 7),strip.text.x=element_text(size = 6),strip.background = element_blank(), panel.border = element_rect(colour = "gray", fill=NA, size=1))
x11(6,6);p
x11(6,6);p
p <- ggplot(data = data_plot, mapping = aes(x = area,y = model, fill=x) )
p <- p +  scale_fill_manual(values=pallet)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="R")
x11(6,6);p
table(data$index)
data_plot=data[data$metric=="r"|data$index=="prcptot",]
data_plot$model=factor(substring(data_plot$model,2),levels=27:1)
levels(data_plot$area)=1:8
data_plot$x=fct_rev(cut(data_plot$x, c(-1,-0.8,-0.6,-0.4,-0.2,-0.1,0.1,0.2,0.4,0.6,0.8,1)))
data_plot$sig=cut(data_plot$p_value, c(-Inf,0.05,Inf),labels= c("*",""))
pallet <- brewer.pal(name = "RdBu" ,n=11)
display.brewer.all(select = "RdBu",n=11)
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p +  scale_fill_manual(values=pallet)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="R")
x11(6,6);p
p <- ggplot(data = data_plot, mapping = aes(x = model,y = area, fill=x) )
p <- p +  scale_fill_manual(values=pallet)
p <- p +  geom_tile(colour="gray")
p <- p +  labs(y="Model  Number", x="Area",fill="R")
p <- p + theme(legend.position="bottom")
x11(6,6);p
x11(10,6);p
x11(10,6);p
